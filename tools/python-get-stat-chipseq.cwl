cwlVersion: v1.0
class: CommandLineTool
requirements:
- class: ShellCommandRequirement
- class: InlineJavascriptRequirement
  expressionLib:
  - var get_output_filename = function() { if (inputs.output_filename) { return inputs.output_filename; } var root = inputs.bowtie_log.basename.split('.').slice(0,-1).join('.'); var ext = ".stat"; return (root == "")?inputs.bowtie_log.basename+ext:root+ext; };
  - var get_formatted_output_filename = function() { if (inputs.formatted_output_filename) { return inputs.formatted_output_filename; } var root = inputs.bowtie_log.basename.split('.').slice(0,-1).join('.'); var ext = "_stats.tsv"; return (root == "")?inputs.bowtie_log.basename+ext:root+ext; };
hints:
- class: DockerRequirement
  dockerPull: biowardrobe2/scidap:v0.0.2
inputs:
  script:
    type: string?
    default: |
      #!/usr/bin/env python
      import sys, re
      TOTAL, ALIGNED, SUPPRESSED, USED = 100, 80, 0, 0
      with open(sys.argv[1], 'r') as bowtie_log:
        for line in bowtie_log:
          if 'processed:' in line:
            TOTAL = int(line.split('processed:')[1])
          if 'alignment:' in line:
            ALIGNED = int(line.split('alignment:')[1].split()[0])
          if 'due to -m:' in line:
            SUPPRESSED = int(line.split('due to -m:')[1].split()[0])
      USED = ALIGNED
      with open(sys.argv[2], 'r') as rmdup_log:
        for line in rmdup_log:
          if '/' in line and 'Skip' not in line:
            splt = line.split('/')
            USED = int((splt[1].split('='))[0].strip()) - int((splt[0].split(']'))[1].strip())
      with open(sys.argv[3], 'w') as fo:
          fo.write(str(TOTAL) + " " + str(ALIGNED) + " " + str(SUPPRESSED) + " " + str(USED))
      with open(sys.argv[4], 'w') as fof:
          fof.write("Tags total\tMapped\tMulti-mapped\tUnmapped\tDuplicates\n")
          fof.write(str(TOTAL) + "\t" + str(USED) + "\t" + str(SUPPRESSED) + "\t" + str(TOTAL-ALIGNED-SUPPRESSED) + "\t" + str(ALIGNED-USED) + "\n")
    inputBinding:
      position: 5
    doc: Python script to get TOTAL, ALIGNED, SUPPRESSED, USED values from log files
  bowtie_log:
    type: File
    inputBinding:
      position: 6
    doc: Log file from Bowtie
  rmdup_log:
    type: File
    inputBinding:
      position: 7
    doc: Log file from samtools rmdup
  output_filename:
    type: string?
    inputBinding:
      position: 8
      valueFrom: $(get_output_filename())
    default: ''
    doc: Name for generated output file
  formatted_output_filename:
    type: string?
    inputBinding:
      position: 9
      valueFrom: $(get_formatted_output_filename())
    default: ''
    doc: Name for generated formatted output file
outputs:
  output_file:
    type: File
    outputBinding:
      glob: $(get_output_filename())
  formatted_output_file:
    type: File
    outputBinding:
      glob: $(get_formatted_output_filename())
  total_reads:
    type: int
    outputBinding:
      loadContents: true
      glob: $(get_output_filename())
      outputEval: $(parseInt(self[0].contents.split(' ')[0]))
  mapped_reads:
    type: int
    outputBinding:
      loadContents: true
      glob: $(get_output_filename())
      outputEval: $(parseInt(self[0].contents.split(' ')[1]))
  suppressed_reads:
    type: int
    outputBinding:
      loadContents: true
      glob: $(get_output_filename())
      outputEval: $(parseInt(self[0].contents.split(' ')[2]))
  used_reads:
    type: int
    outputBinding:
      loadContents: true
      glob: $(get_output_filename())
      outputEval: $(parseInt(self[0].contents.split(' ')[3]))
baseCommand:
- python
- -c
doc: |
  Tool processes and combines log files generated by Bowtie aligner and samtools rmdup.

  `get_output_filename` function returns output filename equal to `output_filename` (if this input is provided) or
  generated on the base of bowtie log basename with `.stat` extension.

  `get_formatted_output_filename` function returns output filename equal to `formatted_output_filename` (if input is provided) or
  generated on the base of STAR log basename with `_stats.tsv` extension.
label: python-get-stat-chipseq
