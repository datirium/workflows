cwlVersion: v1.0
class: CommandLineTool
requirements:
- class: InlineJavascriptRequirement
  expressionLib:
  - var get_label = function(i) { var rootname = inputs.barcode_metrics_report[i].basename.split('.').slice(0,-1).join('.'); rootname = (rootname=="")?inputs.barcode_metrics_report[i].basename:rootname; return inputs.gem_well_labels?inputs.gem_well_labels[i].replace(/\t|\s|\[|\]|\>|\<|,|\./g, "_"):rootname; };
- class: InitialWorkDirRequirement
  listing: |
    ${
      var entry = "library_id,fragments,cells\n"
      for (var i=0; i < inputs.barcode_metrics_report.length; i++){
        entry += get_label(i) + "," + inputs.fragments_file_from_count[i].path + "," + inputs.barcode_metrics_report[i].path + "\n";
      }
      return [{
        "entry": entry,
        "entryname": "metadata.csv"
      }];
    }
hints:
- class: DockerRequirement
  dockerPull: cumulusprod/cellranger-atac:2.1.0
inputs:
  fragments_file_from_count:
    type: File[]
    secondaryFiles:
    - .tbi
    doc: |
      Array of files containing count and
      barcode information for every ATAC
      fragment observed in the
      "cellranger-atac count" experiment
      in TSV format.
  barcode_metrics_report:
    type: File[]
    doc: |
      Array of files with per-barcode
      fragment counts & metrics produced
      by "cellranger-atac count" command
      in CSV format.
  gem_well_labels:
    type:
    - 'null'
    - string[]
    doc: |
      Array of GEM well identifiers to be
      used for labeling purposes only. If
      not provided use rootnames of files
      from the barcode_metrics_report input.
  indices_folder:
    type: Directory
    inputBinding:
      position: 5
      prefix: --reference
    doc: |
      Path to folder containing a Cell Ranger
      ATAC or Cell Ranger ARC reference. Should
      be generated by "cellranger-atac mkref"
      or "cellranger-arc mkref" commands.
  normalization_mode:
    type:
    - 'null'
    - type: enum
      name: normalization
      symbols:
      - none
      - depth
    inputBinding:
      position: 6
      prefix: --normalize
    doc: |
      Library depth normalization
      mode: depth, none.
      Default: depth
  threads:
    type: int?
    inputBinding:
      position: 7
      prefix: --localcores
    doc: |
      Set max cores the pipeline may
      request at one time.
      Default: all available
  memory_limit:
    type: int?
    inputBinding:
      position: 8
      prefix: --localmem
    doc: |
      Set max GB the pipeline may
      request at one time.
      Default: all available
  virt_memory_limit:
    type: int?
    inputBinding:
      position: 9
      prefix: --localvmem
    doc: |
      Set max virtual address space
      in GB for the pipeline.
      Default: all available
outputs:
  web_summary_report:
    type: File
    outputBinding:
      glob: aggregated/outs/web_summary.html
    doc: |
      Run summary metrics and charts
      in HTML format.
  metrics_summary_report_json:
    type: File
    outputBinding:
      glob: aggregated/outs/summary.json
    doc: |
      Run summary metrics
      in JSON format.
  metrics_summary_report_csv:
    type: File
    outputBinding:
      glob: aggregated/outs/summary.csv
    doc: |
      Run summary metrics
      in CSV format.
  barcode_metrics_report:
    type: File
    outputBinding:
      glob: aggregated/outs/singlecell.csv
    doc: |
      Per-barcode fragment counts &
      metrics in CSV format.
  fragments_file:
    type: File
    outputBinding:
      glob: aggregated/outs/fragments.tsv.gz
    secondaryFiles:
    - .tbi
    doc: |
      Count and barcode information for
      every ATAC fragment observed in
      the aggregated experiment in
      TSV format.
  peaks_bed_file:
    type: File
    outputBinding:
      glob: aggregated/outs/peaks.bed
    doc: |
      Locations of open-chromatin regions
      identified in the aggregated experiment
      (these regions are referred to as "peaks").
  peak_annotation_file:
    type: File
    outputBinding:
      glob: aggregated/outs/peak_annotation.tsv
    doc: |
      Annotations of peaks based
      on genomic proximity alone.
  secondary_analysis_report_folder:
    type: Directory
    outputBinding:
      glob: aggregated/outs/analysis
    doc: |
      Folder with secondary
      analysis results.
  filtered_feature_bc_matrix_folder:
    type: Directory
    outputBinding:
      glob: aggregated/outs/filtered_peak_bc_matrix
    doc: |
      Folder with aggregated filtered
      peak-barcode matrices containing
      only cellular barcodes in MEX format.
  filtered_feature_bc_matrix_h5:
    type: File
    outputBinding:
      glob: aggregated/outs/filtered_peak_bc_matrix.h5
    doc: |
      Aggregated filtered peak-barcode
      matrices containing only cellular
      barcodes in HDF5 format.
  filtered_tf_bc_matrix_folder:
    type: Directory?
    outputBinding:
      glob: aggregated/outs/filtered_tf_bc_matrix
    doc: |
      Folder with aggregated filtered
      tf-barcode matrices containing only
      cellular barcodes in MEX format.
  filtered_tf_bc_matrix_h5:
    type: File?
    outputBinding:
      glob: aggregated/outs/filtered_tf_bc_matrix.h5
    doc: |
      Aggregated filtered tf-barcode matrices
      containing only cellular barcodes
      in HDF5 format.
  aggregation_metadata:
    type: File
    outputBinding:
      glob: aggregated/outs/aggregation_csv.csv
    doc: |
      Aggregation CSV file.
  loupe_browser_track:
    type: File
    outputBinding:
      glob: aggregated/outs/cloupe.cloupe
    doc: |
      Loupe Browser visualization
      and analysis file.
  stdout_log:
    type: stdout
  stderr_log:
    type: stderr
baseCommand:
- cellranger-atac
- aggr
- --disable-ui
- --id
- aggregated
- --csv
- metadata.csv
stdout: cellranger_atac_aggr_stdout.log
stderr: cellranger_atac_aggr_stderr.log
label: Cell Ranger Aggregate (ATAC)
doc: |
  Cell Ranger Aggregate (ATAC)

  Combines outputs from multiple runs of
  “Cell Ranger Count (ATAC)” pipeline.

  Parameters set by default:
  --disable-ui - no need in any UI when running in Docker container
  --id         - hardcoded to `aggregated` as we want to return the
                 content of the outputs folder as separate outputs

  Skipped parameters:
  --description
  --peaks
  --nosecondary
  --dim-reduce
  --dry
  --jobmode
  --mempercore
  --maxjobs
  --jobinterval
  --overrides
  --uiport
  --noexit
  --nopreflight
