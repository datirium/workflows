cwlVersion: v1.0
class: CommandLineTool
requirements:
- class: InlineJavascriptRequirement
  expressionLib:
  - var get_label = function(i) { var rootname = inputs.rna_molecule_info_h5[i].basename.split('.').slice(0,-1).join('.'); rootname = (rootname=="")?inputs.rna_molecule_info_h5[i].basename:rootname; return inputs.gem_well_labels?inputs.gem_well_labels[i].replace(/\t|\s|\[|\]|\>|\<|,|\./g, "_"):rootname; };
- class: InitialWorkDirRequirement
  listing: |
    ${
      var entry = "library_id,atac_fragments,per_barcode_metrics,gex_molecule_info\n"
      var grouping = "library_id\tcondition\n"
      for (var i=0; i < inputs.rna_molecule_info_h5.length; i++){
        entry += get_label(i) + "," + inputs.atac_fragments_file_from_count[i].path + "," + inputs.barcode_metrics_report[i].path + "," + inputs.rna_molecule_info_h5[i].path + "\n"
        grouping += get_label(i) + "\t" + get_label(i) + "\n"
      }
      return [
        {
          "entry": entry,
          "entryname": "metadata.csv"
        },
        {
          "entry": grouping,
          "entryname": "grouping.tsv"
        }
      ];
    }
hints:
- class: DockerRequirement
  dockerPull: biowardrobe2/cellranger-arc:v0.0.1
inputs:
  atac_fragments_file_from_count:
    type: File[]
    secondaryFiles:
    - .tbi
    doc: |
      Array of files containing count and
      barcode information for every ATAC
      fragment observed in the experiment
      in TSV format. Outputs from the
      "cellranger-arc count" command.
  barcode_metrics_report:
    type: File[]
    doc: |
      Array of files with the ATAC and RNA
      read count summaries generated for
      every barcode observed in the
      experiment. Outputs from the
      "cellranger-arc count" command.
  rna_molecule_info_h5:
    type: File[]
    doc: |
      Array of RNA molecule-level information
      files in HDF5 format. Outputs from the
      "cellranger-arc count" command.
  gem_well_labels:
    type:
    - 'null'
    - string[]
    doc: |
      Array of GEM well identifiers to be
      used for labeling purposes only. If
      not provided use rootnames of files
      from the rna_molecule_info_h5 input.
  indices_folder:
    type: Directory
    inputBinding:
      position: 5
      prefix: --reference
    doc: |
      Compatible with Cell Ranger ARC reference
      folder that includes STAR and BWA indices.
      Should be generated by the
      "cellranger-arc mkref" command.
  normalization_mode:
    type:
    - 'null'
    - type: enum
      name: normalization
      symbols:
      - none
      - depth
    inputBinding:
      position: 6
      prefix: --normalize
    doc: |
      Library depth normalization
      mode: depth, none.
      Default: depth
  threads:
    type: int?
    inputBinding:
      position: 7
      prefix: --localcores
    doc: |
      Set max cores the pipeline may
      request at one time.
      Default: all available
  memory_limit:
    type: int?
    inputBinding:
      position: 8
      prefix: --localmem
    doc: |
      Set max GB the pipeline may
      request at one time.
      Default: all available
  virt_memory_limit:
    type: int?
    inputBinding:
      position: 9
      prefix: --localvmem
    doc: |
      Set max virtual address space
      in GB for the pipeline.
      Default: all available
outputs:
  web_summary_report:
    type: File
    outputBinding:
      glob: aggregated/outs/web_summary.html
    doc: |
      Aggregated run summary metrics
      and charts in HTML format.
  metrics_summary_report:
    type: File
    outputBinding:
      glob: aggregated/outs/summary.csv
    doc: |
      Aggregated run summary metrics
      in CSV format.
  atac_fragments_file:
    type: File
    outputBinding:
      glob: aggregated/outs/atac_fragments.tsv.gz
    secondaryFiles:
    - .tbi
    doc: |
      Count and barcode information for
      every ATAC fragment observed in the
      aggregated experiment in TSV format.
  atac_peaks_bed_file:
    type: File
    outputBinding:
      glob: aggregated/outs/atac_peaks.bed
    doc: |
      Locations of open-chromatin regions
      identified in aggregated experiment
      (these regions are referred to as
      "peaks").
  atac_peak_annotation_file:
    type: File
    outputBinding:
      glob: aggregated/outs/atac_peak_annotation.tsv
    doc: |
      Annotations of peaks based on
      genomic proximity alone (for
      aggregated experiment). Note
      that these are not functional
      annotations and they do not
      make use of linkage with RNA
      data.
  secondary_analysis_report_folder:
    type: Directory
    outputBinding:
      glob: aggregated/outs/analysis
    doc: |
      Folder with secondary analysis results
      including dimensionality reduction, cell
      clustering, and differential expression
      for aggregated results.
  filtered_feature_bc_matrix_folder:
    type: Directory
    outputBinding:
      glob: aggregated/outs/filtered_feature_bc_matrix
    doc: |
      Folder with aggregated filtered
      feature-barcode matrices containing
      only cellular barcodes in MEX format.
  filtered_feature_bc_matrix_h5:
    type: File
    outputBinding:
      glob: aggregated/outs/filtered_feature_bc_matrix.h5
    doc: |
      Aggregated filtered feature-barcode
      matrices containing only cellular
      barcodes in HDF5 format.
  raw_feature_bc_matrices_folder:
    type: Directory
    outputBinding:
      glob: aggregated/outs/raw_feature_bc_matrix
    doc: |
      Folder with aggregated unfiltered
      feature-barcode matrices containing
      all barcodes in MEX format.
  raw_feature_bc_matrices_h5:
    type: File
    outputBinding:
      glob: aggregated/outs/raw_feature_bc_matrix.h5
    doc: |
      Aggregated unfiltered feature-barcode
      matrices containing all barcodes in
      HDF5 format.
  aggregation_metadata:
    type: File
    outputBinding:
      glob: aggregated/outs/aggr.csv
    doc: |
      Copy of the input aggregation CSV file.
  grouping_data:
    type: File
    outputBinding:
      glob: grouping.tsv
    doc: |
      Example of TSV file to define
      datasets grouping.
  loupe_browser_track:
    type: File
    outputBinding:
      glob: aggregated/outs/cloupe.cloupe
    doc: |
      Loupe Browser visualization and
      analysis file for aggregated results.
  stdout_log:
    type: stdout
  stderr_log:
    type: stderr
baseCommand:
- cellranger-arc
- aggr
- --disable-ui
- --id
- aggregated
- --csv
- metadata.csv
stdout: cellranger_arc_aggr_stdout.log
stderr: cellranger_arc_aggr_stderr.log
label: Cell Ranger Aggregate (RNA+ATAC)
doc: |
  Cell Ranger Aggregate (RNA+ATAC)

  Combines outputs from multiple runs of “Cell Ranger Count (RNA+ATAC)”
  pipeline.

  Parameters set by default:
  --disable-ui - no need in any UI when running in Docker container
  --id - hardcoded to `aggregated` as we want to return the content of the
         outputs folder as separate outputs

  Skipped parameters:
  --nosecondary
  --dry
  --noexit
  --nopreflight
  --description
  --peaks
  --jobmode
  --mempercore
  --maxjobs
  --jobinterval
  --overrides
  --uiport

  Tool calls "cellranger-arc aggr" command that takes as input a CSV file specifying a list
  of cellranger-arc count output files for each GEM well being aggregated and produces a
  single feature-barcode matrix containing all the data. When combining multiple GEM wells,
  the barcode sequences for each channel are distinguished by a GEM well suffix appended to
  the barcode sequence. By default, the reads from each GEM well are subsampled such that all
  GEM wells have the same effective sequencing depth for both ATAC and gene expression modalities;
  for the ATAC data it is measured in terms of median unique fragments per cell and for gene
  expression it is measured in terms of the average number of reads that are confidently mapped
  to the transcriptome per cell. However, it is possible to turn off this normalization altogether.
