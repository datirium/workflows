cwlVersion: v1.0
class: CommandLineTool


requirements:
- class: InlineJavascriptRequirement
  expressionLib:
  - var get_label = function(i) {
        var rootname = inputs.rna_molecule_info_h5[i].basename.split('.').slice(0,-1).join('.');
        rootname = (rootname=="")?inputs.rna_molecule_info_h5[i].basename:rootname;
        return inputs.gem_well_labels?inputs.gem_well_labels[i].replace(/\t|\s|\[|\]|\>|\<|,|\./g, "_"):rootname;
    };
- class: InitialWorkDirRequirement
  listing: |
    ${
      var entry = "library_id,atac_fragments,per_barcode_metrics,gex_molecule_info\n"
      var grouping = "library_id\tcondition\n"
      for (var i=0; i < inputs.rna_molecule_info_h5.length; i++){
        entry += get_label(i) + "," + inputs.atac_fragments_file_from_count[i].path + "," + inputs.barcode_metrics_report[i].path + "," + inputs.rna_molecule_info_h5[i].path + "\n"
        grouping += get_label(i) + "\t" + get_label(i) + "\n"
      }
      return [
        {
          "entry": entry,
          "entryname": "metadata.csv"
        },
        {
          "entry": grouping,
          "entryname": "grouping.tsv"
        }
      ];
    }


hints:
- class: DockerRequirement
  dockerPull: cumulusprod/cellranger-arc:2.0.2


inputs:

  atac_fragments_file_from_count:
    type: File[]
    secondaryFiles:
    - .tbi
    doc: |
      Array of files containing count and
      barcode information for every ATAC
      fragment observed in the experiment
      in TSV format. Outputs from the
      "cellranger-arc count" command.

  barcode_metrics_report:
    type: File[]
    doc: |
      Array of files with the ATAC and RNA
      read count summaries generated for
      every barcode observed in the
      experiment. Outputs from the
      "cellranger-arc count" command.

  rna_molecule_info_h5:
    type: File[]
    doc: |
      Array of RNA molecule-level information
      files in HDF5 format. Outputs from the
      "cellranger-arc count" command.

  gem_well_labels:
    type:
    - "null"
    - string[]
    doc: |
      Array of GEM well identifiers to be
      used for labeling purposes only. If
      not provided use rootnames of files
      from the rna_molecule_info_h5 input.

  indices_folder:
    type: Directory
    inputBinding:
      position: 5
      prefix: "--reference"
    doc: |
      Compatible with Cell Ranger ARC reference
      folder that includes STAR and BWA indices.
      Should be generated by the
      "cellranger-arc mkref" command.

  normalization_mode:
    type:
    - "null"
    - type: enum
      name: "normalization"
      symbols: ["none", "depth"]
    inputBinding:
      position: 6
      prefix: "--normalize"
    doc: |
      Library depth normalization
      mode: depth, none.
      Default: depth

  threads:
    type: int?
    inputBinding:
      position: 7
      prefix: "--localcores"
    doc: |
      Set max cores the pipeline may
      request at one time.
      Default: all available

  memory_limit:
    type: int?
    inputBinding:
      position: 8
      prefix: "--localmem"
    doc: |
      Set max GB the pipeline may
      request at one time.
      Default: all available

  virt_memory_limit:
    type: int?
    inputBinding:
      position: 9
      prefix: "--localvmem"
    doc: |
      Set max virtual address space
      in GB for the pipeline.
      Default: all available


outputs:

  web_summary_report:
    type: File
    outputBinding:
      glob: "aggregated/outs/web_summary.html"
    doc: |
      Aggregated run summary metrics
      and charts in HTML format.

  metrics_summary_report:
    type: File
    outputBinding:
      glob: "aggregated/outs/summary.csv"
    doc: |
      Aggregated run summary metrics
      in CSV format.

  atac_fragments_file:
    type: File
    outputBinding:
      glob: "aggregated/outs/atac_fragments.tsv.gz"
    secondaryFiles:
    - .tbi
    doc: |
      Count and barcode information for
      every ATAC fragment observed in the
      aggregated experiment in TSV format.

  atac_peaks_bed_file:
    type: File
    outputBinding:
      glob: "aggregated/outs/atac_peaks.bed"
    doc: |
      Locations of open-chromatin regions
      identified in aggregated experiment
      (these regions are referred to as
      "peaks").

  atac_peak_annotation_file:
    type: File
    outputBinding:
      glob: "aggregated/outs/atac_peak_annotation.tsv"
    doc: |
      Annotations of peaks based on
      genomic proximity alone (for
      aggregated experiment). Note
      that these are not functional
      annotations and they do not
      make use of linkage with RNA
      data.

  secondary_analysis_report_folder:
    type: Directory
    outputBinding:
      glob: "aggregated/outs/analysis"
    doc: |
      Folder with secondary analysis results
      including dimensionality reduction, cell
      clustering, and differential expression
      for aggregated results.

  filtered_feature_bc_matrix_folder:
    type: Directory
    outputBinding:
      glob: "aggregated/outs/filtered_feature_bc_matrix"
    doc: |
      Folder with aggregated filtered
      feature-barcode matrices containing
      only cellular barcodes in MEX format.

  filtered_feature_bc_matrix_h5:
    type: File
    outputBinding:
      glob: "aggregated/outs/filtered_feature_bc_matrix.h5"
    doc: |
      Aggregated filtered feature-barcode
      matrices containing only cellular
      barcodes in HDF5 format.

  raw_feature_bc_matrices_folder:
    type: Directory
    outputBinding:
      glob: "aggregated/outs/raw_feature_bc_matrix"
    doc: |
      Folder with aggregated unfiltered
      feature-barcode matrices containing
      all barcodes in MEX format.

  raw_feature_bc_matrices_h5:
    type: File
    outputBinding:
      glob: "aggregated/outs/raw_feature_bc_matrix.h5"
    doc: |
      Aggregated unfiltered feature-barcode
      matrices containing all barcodes in
      HDF5 format.

  aggregation_metadata:
    type: File
    outputBinding:
      glob: "aggregated/outs/aggr.csv"
    doc: |
      Copy of the input aggregation CSV file.

  grouping_data:
    type: File
    outputBinding:
      glob: "grouping.tsv"
    doc: |
      Example of TSV file to define
      datasets grouping.

  loupe_browser_track:
    type: File
    outputBinding:
      glob: "aggregated/outs/cloupe.cloupe"
    doc: |
      Loupe Browser visualization and
      analysis file for aggregated results.

  stdout_log:
    type: stdout

  stderr_log:
    type: stderr


baseCommand: ["cellranger-arc", "aggr", "--disable-ui", "--id", "aggregated", "--csv", "metadata.csv"]


stdout: cellranger_arc_aggr_stdout.log
stderr: cellranger_arc_aggr_stderr.log


$namespaces:
  s: http://schema.org/

$schemas:
- https://github.com/schemaorg/schemaorg/raw/main/data/releases/11.01/schemaorg-current-http.rdf

label: "Cell Ranger Aggregate (RNA+ATAC)"
s:name: "Cell Ranger Aggregate (RNA+ATAC)"
s:alternateName: "Combines outputs from multiple runs of Cell Ranger Count (RNA+ATAC) pipeline"

s:downloadUrl: https://raw.githubusercontent.com/Barski-lab/workflows/master/tools/cellranger-arc-aggr.cwl
s:codeRepository: https://github.com/Barski-lab/workflows
s:license: http://www.apache.org/licenses/LICENSE-2.0

s:isPartOf:
  class: s:CreativeWork
  s:name: Common Workflow Language
  s:url: http://commonwl.org/

s:creator:
- class: s:Organization
  s:legalName: "Cincinnati Children's Hospital Medical Center"
  s:location:
  - class: s:PostalAddress
    s:addressCountry: "USA"
    s:addressLocality: "Cincinnati"
    s:addressRegion: "OH"
    s:postalCode: "45229"
    s:streetAddress: "3333 Burnet Ave"
    s:telephone: "+1(513)636-4200"
  s:logo: "https://www.cincinnatichildrens.org/-/media/cincinnati%20childrens/global%20shared/childrens-logo-new.png"
  s:department:
  - class: s:Organization
    s:legalName: "Allergy and Immunology"
    s:department:
    - class: s:Organization
      s:legalName: "Barski Research Lab"
      s:member:
      - class: s:Person
        s:name: Michael Kotliar
        s:email: mailto:misha.kotliar@gmail.com
        s:sameAs:
        - id: http://orcid.org/0000-0002-6486-3898


doc: |
  Cell Ranger Aggregate (RNA+ATAC)

  Combines outputs from multiple runs of “Cell Ranger Count (RNA+ATAC)”
  pipeline.

  Parameters set by default:
  --disable-ui - no need in any UI when running in Docker container
  --id - hardcoded to `aggregated` as we want to return the content of the
         outputs folder as separate outputs

  Skipped parameters:
  --nosecondary
  --dry
  --noexit
  --nopreflight
  --description
  --peaks
  --jobmode
  --mempercore
  --maxjobs
  --jobinterval
  --overrides
  --uiport

  Tool calls "cellranger-arc aggr" command that takes as input a CSV file specifying a list
  of cellranger-arc count output files for each GEM well being aggregated and produces a
  single feature-barcode matrix containing all the data. When combining multiple GEM wells,
  the barcode sequences for each channel are distinguished by a GEM well suffix appended to
  the barcode sequence. By default, the reads from each GEM well are subsampled such that all
  GEM wells have the same effective sequencing depth for both ATAC and gene expression modalities;
  for the ATAC data it is measured in terms of median unique fragments per cell and for gene
  expression it is measured in terms of the average number of reads that are confidently mapped
  to the transcriptome per cell. However, it is possible to turn off this normalization altogether.


s:about: |
  Aggregate data from multiple `cellranger-arc count` runs

  USAGE:
      cellranger-arc aggr [FLAGS] [OPTIONS] --id <ID> --reference <PATH> --csv <CSV>

  FLAGS:
          --nosecondary
              Disable secondary analysis, e.g. clustering

          --dry
              Do not execute the pipeline. Generate a pipeline invocation (.mro) file and stop

          --disable-ui
              Do not serve the web UI

          --noexit
              Keep web UI running after pipestance completes or fails

          --nopreflight
              Skip preflight checks

      -h, --help
              Prints help information


  OPTIONS:
          --id <ID>
              A unique run id and output folder name [a-zA-Z0-9_-]+ of maximum length 64 characters

          --description <TEXT>
              Sample description to embed in output files [default: ]

          --reference <PATH>
              Path to folder containing cellranger-arc-compatible reference. Reference packages can be downloaded from support.10xgenomics.com or constructed using the `cellranger-
              arc mkref` command. Note: this reference must match the reference used for the initial `cellranger-arc count` run

          --csv <CSV>
              Path to CSV file enumerating 'cellranger-arc count' outputs required for aggregation.
              
              For example, a CSV for aggregating two samples would look as follows (blank lines are ignored):
              
              library_id,atac_fragments,per_barcode_metrics,gex_molecule_info
              
              L1,/data/L1/outs/atac_fragments.tsv.gz,/data/L1/outs/per_barcode_metrics.csv,/data/L1/outs/gex_molecule_info.h5
              
              L2,/data/L2/outs/atac_fragments.tsv.gz,/data/L2/outs/per_barcode_metrics.csv,/data/L2/outs/gex_molecule_info.h5
              
              Optionally, metadata associated with these libraries can be specified using additional columns. This information is not used by the pipeline but will be available in
              the Loupe file for visualization.

          --peaks <BED>
              Override peak caller: specify peaks to use in downstream analyses from supplied 3-column BED file. The supplied peaks file must be sorted by position and not contain
              overlapping peaks; comment lines beginning with `#` are allowed

          --normalize <MODE>
              Library depth normalization mode [default: depth] [possible values: none, depth]

          --jobmode <MODE>
              Job manager to use. Valid options: local (default), sge, lsf, slurm or path to a .template file. Search for help on "Cluster Mode" at support.10xgenomics.com for more
              details on configuring the pipeline to use a compute cluster [default: local]

          --localcores <NUM>
              Set max cores the pipeline may request at one time. Only applies to local jobs

          --localmem <NUM>
              Set max GB the pipeline may request at one time. Only applies to local jobs

          --localvmem <NUM>
              Set max virtual address space in GB for the pipeline. Only applies to local jobs

          --mempercore <NUM>
              Reserve enough threads for each job to ensure enough memory will be available, assuming each core on your cluster has at least this much memory available. Only applies
              to cluster jobmodes

          --maxjobs <NUM>
              Set max jobs submitted to cluster at one time. Only applies to cluster jobmodes

          --jobinterval <NUM>
              Set delay between submitting jobs to cluster, in ms. Only applies to cluster jobmodes

          --overrides <PATH>
              The path to a JSON file that specifies stage-level overrides for cores and memory. Finer-grained than --localcores, --mempercore and --localmem. Consult
              https://support.10xgenomics.com/ for an example override file

          --uiport <PORT>
              Serve web UI at http://localhost:PORT