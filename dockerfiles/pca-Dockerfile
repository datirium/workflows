#################################################################
# Dockerfile
#
# Software:         Principal component analysis
# Software Version: v0.0.8
# Description:      Dockerized version of PCA script
# Website:          https://github.com/datirium/workflows
# Provides:         R script to run PCA
# Base Image:       r-base:4.0.2
# Build Cmd:        docker build --rm -t scidap/pca:v0.0.8 -f pca-Dockerfile .
# Pull Cmd:         docker pull scidap/pca:v0.0.8
# Run Cmd:          docker run --rm -ti scidap/pca:v0.0.8
#################################################################


### Base Image
FROM r-base:4.0.2
LABEL maintainer="heylel.b.sh@gmail.com"
ENV DEBIAN_FRONTEND noninteractive


################## BEGIN INSTALLATION ######################

WORKDIR /tmp

COPY ./scripts/run_pca.R /usr/local/bin/run_pca.R

### Installing dependencies
RUN apt-get update && \
    apt-get install libgcc-8-dev python3-dev python3-pip libxml2-dev libcurl4-openssl-dev libssl-dev pandoc -y && \
### Installing dependencies
    R -e 'install.packages("argparse", repo = "https://cloud.r-project.org/")' && \
    R -e 'install.packages("scatterplot3d", repo = "https://cloud.r-project.org/")' && \
    R -e 'install.packages("ggplot2", repo = "https://cloud.r-project.org/")' && \
    R -e 'install.packages("plotly", repo = "https://cloud.r-project.org/")' && \
    R -e 'install.packages("htmlwidgets", repo = "https://cloud.r-project.org/")' && \
    R -e 'install.packages("ggrepel", repo = "https://cloud.r-project.org/")' && \
### Installing run_pca.R R script
    chmod +x /usr/local/bin/run_pca.R && \
### Cleaning
    apt-get clean && \
    apt-get purge && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/* && \
    strip /usr/local/bin/*; true
